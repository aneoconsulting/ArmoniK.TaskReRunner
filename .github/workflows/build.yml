name: Build and Test

on:
  push:
    branches-ignore:
      - release
    tags-ignore: [ '**' ]

jobs:
  versionning:
    name: Versionning
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.genver.outputs.version }}
    steps:
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      with:
        ref: ${{ github.ref }}
        fetch-depth: 0

    - name: Generate Version
      id: genver
      uses: codacy/git-version@80c816f11db8dea5e3a81025f598193015b51832 # 2.8.0
      with:
        minor-identifier: "feat:"
        release-branch: release
        dev-branch: main

    - name: Print version
      run: echo VERSION ${{ steps.genver.outputs.version }} >> $GITHUB_STEP_SUMMARY
 
  unitTest:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      with:
        ref: ${{ github.ref }}
        submodules: true

    - name: Run tests
      run: |
        cd test/ArmoniK.TaskReRunner.Test/
        dotnet test --logger "trx;LogFileName=test-results.trx" -p:RunAnalyzers=false -p:WarningLevel=0

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Test - ubuntu test/ArmoniK.TaskReRunner.Test/
        path: test/ArmoniK.TaskReRunner.Test/TestResults/test-results.trx
        reporter: dotnet-trx

  publish-nuget:
    strategy:
      matrix:
        projects:
          - src/TaskReRunner/ArmoniK.TaskReRunner.csproj
          - src/TaskDumper/ArmoniK.TaskDumper.csproj
      fail-fast: false
    runs-on: ubuntu-latest
    needs:
      - versionning
    env:
      VERSION: ${{ needs.versionning.outputs.version }}
    steps:
    - name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      with:
        ref: ${{ github.ref }}

    - name: Build the package
      run: |
        dotnet build ${{ matrix.projects }} -c Release -p:RunAnalyzers=false -p:WarningLevel=0

    - name: Pack the package
      run: |
        dotnet pack ${{ matrix.projects }} -c Release -o /tmp/packages -p:PackageVersion=$VERSION -p:Version=$VERSION

    - name: Push the package
      run: dotnet nuget push /tmp/packages/ArmoniK.*.nupkg -k ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

